{"version":3,"sources":["Redux/Action.js","EmployeeUI.js","Redux/reducer.js","Redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["Add_Money","Remove_Money","EmployeeUI","props","style","textAlign","backgroundColor","color","padding","className","width","marginTop","marginLeft","marginRight","this","state","employyee1","money","type","id","borderWidth","onClick","transaction","document","getElementById","value","employyee2","employyee3","employyee4","employyee5","React","Component","connect","dispatch","transactionType","employeeid","amount","employeeId","TransactMoney","initialState","store","createStore","action","undefined","employeeData","Number","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.408323bd.chunk.js","sourcesContent":["const Add_Money = \"Add_Money\";\r\n\r\nconst Remove_Money = \"Remove_Money\";\r\n\r\nfunction TransactMoney(transactionType, employeeid, amount) {\r\n  return { type: transactionType, employeeId: employeeid, money: amount };\r\n}\r\n\r\nexport { Add_Money, Remove_Money, TransactMoney };\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TransactMoney } from \"./Redux/Action\";\r\nimport { Add_Money, Remove_Money } from \"./Redux/Action\";\r\nimport \"./App.css\";\r\n\r\nclass EmployeeUI extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h1 style={{ backgroundColor: \"black\", color: \"white\", padding: \"8px\" }}>Employee Money System</h1>\r\n        <table className=\"table-bordered\" style={{ width: \"50%\", marginTop: \"8%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>EmployeeId</th>\r\n              <th>Account Total Money</th>\r\n              <th>Transaction Amount</th>\r\n              <th>Add</th>\r\n              <th>Remove</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>Employee1</td>\r\n              <td>{this.props.state.employyee1.money}</td>\r\n              <td>\r\n                <input type=\"text\" id=\"id1\" className=\"form-control\"></input>\r\n              </td>\r\n              <td>\r\n                <button style={{ borderWidth: \"0px\" }} onClick={() => this.props.transaction(Add_Money, \"employyee1\", document.getElementById(\"id1\").value)}>\r\n                  Add\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button style={{ borderWidth: \"0px\" }} onClick={() => this.props.transaction(Remove_Money, \"employyee1\", document.getElementById(\"id1\").value)}>\r\n                  Remove\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Employee2</td>\r\n              <td>{this.props.state.employyee2.money}</td>\r\n              <td>\r\n                <input type=\"text\" id=\"id2\" className=\"form-control\"></input>\r\n              </td>\r\n              <td>\r\n                <button style={{ borderWidth: \"0px\" }} onClick={() => this.props.transaction(Add_Money, \"employyee2\", document.getElementById(\"id2\").value)}>\r\n                  Add\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button style={{ borderWidth: \"0px\" }} onClick={() => this.props.transaction(Remove_Money, \"employyee2\", document.getElementById(\"id2\").value)}>\r\n                  Remove\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Employee3</td>\r\n              <td>{this.props.state.employyee3.money}</td>\r\n              <td>\r\n                <input type=\"text\" id=\"id3\" className=\"form-control\"></input>\r\n              </td>\r\n              <td>\r\n                <button style={{ borderWidth: \"0px\" }} onClick={() => this.props.transaction(Add_Money, \"employyee3\", document.getElementById(\"id3\").value)}>\r\n                  Add\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button style={{ borderWidth: \"0px\" }} onClick={() => this.props.transaction(Remove_Money, \"employyee3\", document.getElementById(\"id3\").value)}>\r\n                  Remove\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Employee4</td>\r\n              <td>{this.props.state.employyee4.money}</td>\r\n              <td>\r\n                <input type=\"text\" id=\"id4\" className=\"form-control\"></input>\r\n              </td>\r\n              <td>\r\n                <button style={{ borderWidth: \"0px\" }} onClick={() => this.props.transaction(Add_Money, \"employyee4\", document.getElementById(\"id4\").value)}>\r\n                  Add\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button style={{ borderWidth: \"0px\" }} onClick={() => this.props.transaction(Remove_Money, \"employyee4\", document.getElementById(\"id4\").value)}>\r\n                  Remove\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Employee5</td>\r\n              <td>{this.props.state.employyee5.money}</td>\r\n              <td>\r\n                <input type=\"text\" id=\"id5\" className=\"form-control\"></input>\r\n              </td>\r\n              <td>\r\n                <button style={{ borderWidth: \"0px\" }} onClick={() => this.props.transaction(Add_Money, \"employyee5\", document.getElementById(\"id5\").value)}>\r\n                  Add\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button style={{ borderWidth: \"0px\" }} onClick={() => this.props.transaction(Remove_Money, \"employyee5\", document.getElementById(\"id5\").value)}>\r\n                  Remove\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { state: state };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    transaction: (transactionType, employeeid, amount) => {\r\n      dispatch(TransactMoney(transactionType, employeeid, amount));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeUI);\r\n","import { Add_Money, Remove_Money } from \"./Action\";\r\n\r\nconst initialState = { employyee1: { money: 1000 }, employyee2: { money: 1000 }, employyee3: { money: 1000 }, employyee4: { money: 1000 }, employyee5: { money: 1000 } };\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  if (action.money === undefined || action.money === \"\") return state;\r\n  const employeeData = state[action.employeeId];\r\n  switch (action.type) {\r\n    case Add_Money:\r\n      return { ...state, [action.employeeId]: { money: employeeData.money + Number(action.money) } };\r\n    case Remove_Money:\r\n      return { ...state, [action.employeeId]: { money: employeeData.money - Number(action.money) } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import \"./App.css\";\r\nimport EmployeeUI from \"./EmployeeUI\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Redux/store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div>\r\n        <EmployeeUI />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}